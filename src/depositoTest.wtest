import accesorios.*
import bicis.*
import deposito.*

describe "test global depositos" {
	
	var bici1 = new Bicicletas(rodado = 28, largo = 180, marca = "Olmo", accesorios = [farolito])
	var bici2 = new Bicicletas(rodado = 26, largo = 180, marca = "Legnano", accesorios = [farolito, new Canasto(volumen = 8), new Morral(largo = 21)])
	var bici3 = new Bicicletas(rodado = 20, largo = 90, marca = "Legnano", accesorios = [new Morral(largo = 6, tieneOjoDeGato = false)])
	var bici4 = new Bicicletas(rodado = 28, largo = 180, marca = "Olmo")
	var bici5 = new Bicicletas(rodado = 26, largo = 175, marca = "Olmo")
	
	var depo1 = new Deposito(bicis = [bici1, bici2, bici3])
	var depo2 = new Deposito(bicis = [bici1, bici2])
	var depo3 = new Deposito(bicis = [bici1, bici2, bici4])
	var depo4 = new Deposito(bicis = [bici1, bici2, bici4,bici5])
		
	test "test Rapidas" {	
		assert.that(depo1.bicis().get(0).esRapida())
		assert.that(depo1.bicis().get(1).esRapida())
		}
		
	test "Marcas" {
		assert.that(#{"Legnano", "Olmo"} == depo1.marcas() )
		}
	
	test "Depo nocturno" {
		assert.that(!depo1.esNocturno())
		}
	
	test "Tiene bici para 10kg" {
		assert.that(depo1.bicis().any( { b => b.carga() >= 10 } ))
	}	
	
	test "No Tiene bici para 50kg" {
		assert.that(!depo1.bicis().any( { b => b.carga() >= 50 } ))
	}
	
	test "Dos primeras si nocturno" {
		assert.that(depo2.esNocturno())
	}
	
	test "Marca de la bici mas r치pida"{
		assert.equals("Olmo",depo1.biciMasRapida())
	}
	
	test "Carga total de las bicis largas"{
		assert.equals(23,depo1.cargaBicisLargas()) //peso 23 = 16 del canasto + 7 del morral de la bici2
	}
	
	test "Cantidad total de bicis sin accesorios"{
		assert.equals(1,depo3.bicisSinAccesorios())
	}
	
	test "Es compa침era de"{
		assert.equals([bici1,bici4],depo4.biciCompanieraDe(bici5))
	}
	
	//Desafio:
	test "Existen compa침eras en el deposito"{
		assert.that(depo4.hayCompanieras())
	}
	
	test "Las parejas de compa침eras"{
		assert.equals([bici1,bici4,bici5],depo4.parejasCompanieras())
	}
}
